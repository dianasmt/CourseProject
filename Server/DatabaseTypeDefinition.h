#pragma once
#include"sqlite_orm-master/include/sqlite_orm/sqlite_orm.h"
//Автоматически сгенерированный тип хранилища бд, если были внесены изменения - требуется обновить
typedef struct sqlite_orm::internal::storage_t<struct sqlite_orm::internal::table_t<class Admin, struct sqlite_orm::internal::column_t<class Admin, int, int(__thiscall Admin::*)(void)const, void(__thiscall Admin::*)(int), struct sqlite_orm::internal::autoincrement_t, struct sqlite_orm::internal::primary_key_t<> >, struct sqlite_orm::internal::column_t<class Admin, class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >, class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >(__thiscall Admin::*)(void)const, void(__thiscall Admin::*)(class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> > const&), struct sqlite_orm::internal::default_t<char const*> >, struct sqlite_orm::internal::column_t<class Admin, class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >, class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >(__thiscall Admin::*)(void)const, void(__thiscall Admin::*)(class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> > const&)> >, struct sqlite_orm::internal::table_t<class Client, struct sqlite_orm::internal::column_t<class Client, int, int(__thiscall Client::*)(void)const, void(__thiscall Client::*)(int), struct sqlite_orm::internal::autoincrement_t, struct sqlite_orm::internal::primary_key_t<> >, struct sqlite_orm::internal::column_t<class Client, class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >, class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >(__thiscall Client::*)(void)const, void(__thiscall Client::*)(class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> > const&), struct sqlite_orm::internal::default_t<char const*> >, struct sqlite_orm::internal::column_t<class Client, class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >, class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >(__thiscall Client::*)(void)const, void(__thiscall Client::*)(class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> > const&)> >, struct sqlite_orm::internal::table_t<class Expert, struct sqlite_orm::internal::column_t<class Expert, int, int(__thiscall Expert::*)(void)const, void(__thiscall Expert::*)(int), struct sqlite_orm::internal::autoincrement_t, struct sqlite_orm::internal::primary_key_t<> >, struct sqlite_orm::internal::column_t<class Expert, class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >, class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >(__thiscall Expert::*)(void)const, void(__thiscall Expert::*)(class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> > const&), struct sqlite_orm::internal::default_t<char const*> >, struct sqlite_orm::internal::column_t<class Expert, class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >, class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >(__thiscall Expert::*)(void)const, void(__thiscall Expert::*)(class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> > const&)> >, struct sqlite_orm::internal::table_t<class Food, struct sqlite_orm::internal::column_t<class Food, int, int(__thiscall Food::*)(void)const, void(__thiscall Food::*)(int), struct sqlite_orm::internal::autoincrement_t, struct sqlite_orm::internal::primary_key_t<> >, struct sqlite_orm::internal::column_t<class Food, class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >, class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >(__thiscall Food::*)(void)const, void(__thiscall Food::*)(class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> > const&), struct sqlite_orm::internal::default_t<char const*> >, struct sqlite_orm::internal::column_t<class Food, class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >, class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >(__thiscall Food::*)(void)const, void(__thiscall Food::*)(class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> > const&)>, struct sqlite_orm::internal::column_t<class Food, double, double const& (__thiscall Food::*)(void)const, void(__thiscall Food::*)(double const&)>, struct sqlite_orm::internal::column_t<class Food, class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >, class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >(__thiscall Food::*)(void)const, void(__thiscall Food::*)(class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> > const&)>, struct sqlite_orm::internal::column_t<class Food, double, double const& (__thiscall Food::*)(void)const, void(__thiscall Food::*)(double const&)> > > Database;
